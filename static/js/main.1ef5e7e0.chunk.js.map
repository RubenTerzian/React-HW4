{"version":3,"sources":["components/Button.jsx","useTimer/index.js","components/UserCard.jsx","components/Input.jsx","components/RegistrationForm.jsx","components/WinnerInfo.jsx","App.jsx","reportWebVitals.js","store/actionTypes.js","store/reducer.js","store/index.js","index.js"],"names":["Button","className","onClick","name","disabled","createTimeFormat","counter","timeConfig","hours","minutes","seconds","Math","floor","useTimer","startIsActive","newTime","newCounter","useState","time","setTime","setCounter","useEffect","intervalId","setInterval","timeFormat","clearInterval","UserCardWithStore","connect","dispatch","delete","user","type","payload","props","id","firstName","secondName","key","e","Input","placeholder","onChange","Timer","setStartisActive","stopIsActive","setStopIsActive","resetIsActive","setResetIsActive","canselIsActive","setCanselIsActive","setCurrentParticipant","openTimer","addParticipant","currentParticipant","alert","RegistrationFormWithStore","store","isTimerActive","action","onSubmit","preventDefault","target","elements","value","match","uniqid","htmlFor","WinnerInfoWithStore","listOfUsers","winner","showWinner","length","arrayForRender","filter","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","actionTypes","initState","JSON","parse","localStorage","getItem","isFilter","createStore","state","stringify","sort","a","b","index","findIndex","participant","splice","listOfUsersLS","indexLS","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ef5e7e0.chunk.js","sourcesContent":["\n\nconst Button = ({className, onClick, name, disabled}) => {\n    /* jshint ignore:start */\n    return(\n    <button className={className+'-btn'} onClick={onClick} key={name+\"_btn_key\"} disabled={disabled}>{name}</button>\n    )\n     /* jshint ignore:end */    \n\n};\n\nexport default Button;","import { useState, useEffect } from \"react\";\n\nexport const createTimeFormat = (counter) => {\n    const timeConfig ={\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n      };\n\n      if(counter/60 < 1){\n        // seconds\n        timeConfig.seconds = counter;\n      }else{\n        if(counter/(60*60) < 1){\n          timeConfig.minutes = Math.floor(counter/60);\n          timeConfig.seconds = counter%(60);\n        }else{\n          timeConfig.hours = Math.floor(counter/(60*60));\n          timeConfig.minutes = Math.floor(counter/60%60);\n          timeConfig.seconds = counter%60;\n        }\n      }\n\n      const timeFormat = \n           (timeConfig.hours<10 ? '0' + timeConfig.hours : timeConfig.hours) + ':' + \n           (timeConfig.minutes<10 ? '0' + timeConfig.minutes : timeConfig.minutes) + ':' + \n           (timeConfig.seconds<10 ? '0' + timeConfig.seconds : timeConfig.seconds);\n           return timeFormat;\n};\n\nconst  useTimer = (startIsActive, newTime, newCounter) => {\n    const [time, setTime] = useState(\"00:00:00\");\n    const [counter, setCounter] = useState(0);\n\n    useEffect(()=>{\n        let intervalId;\n        if(startIsActive){\n    \n          intervalId = setInterval(()=>{\n            const timeFormat = createTimeFormat(counter);\n            setTime(timeFormat);\n            setCounter(counter+1);\n          },20);\n        }\n        return () =>{\n            clearInterval(intervalId);\n        };\n      }, [startIsActive, setTime, counter]);\n\n    return [\n        time,\n        () => setTime(newTime),\n        () => setCounter(newCounter),\n        counter\n    ];\n};\n\nexport default useTimer;\n\n","import { connect } from \"react-redux\";\nimport Button from \"./Button\";\nimport {createTimeFormat} from '../useTimer';\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      delete: (user) => {\n        dispatch({type: 'DELETE_PARTICIPANT', payload: user});\n      }\n    };\n  };\n\nconst UserCard = (props) => {\n    const {id, firstName, secondName, time} = props.user;\n    const key = 'user_card_key';\n    /* jshint ignore:start */\n    return(\n        <div className=\"user-card\" key={key +'_div'}>\n            <span key={key +'_id'}><b>ID:</b> {id}</span>\n            <span key={key +'_name'}><b>Name:</b> {firstName}</span>\n            <span key={key +'_secName'}><b>Surname:</b> {secondName}</span>\n            <span key={key +'_time'}><b>Time:</b> {createTimeFormat(time)}</span>\n            <Button className=\"delete-user\" name=\"Delete\" onClick={e => props.delete(props.user)}/>\n        </div>\n    )\n     /* jshint ignore:end */\n};\n\nconst UserCardWithStore = connect(null, mapDispatchToProps)(UserCard);\n\nexport default UserCardWithStore;","const Input = ({name, type, placeholder, onChange}) => {\n    /* jshint ignore:start */\n    return  <input type={type} id={name} name={name} placeholder={placeholder} onChange={onChange} key={name + '_inp_key'}/>\n    /* jshint ignore:end */\n};\n\nexport default Input;\n\n","import Button from \"./Button\";\nimport Input from \"./Input\";\nimport uniqid from \"uniqid\";\nimport { connect } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport useTimer, {createTimeFormat} from '../useTimer';\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      addParticipant: ({id, firstName, secondName, time}) => {\n        dispatch({type: 'ADD_PARTICIPANT', payload: {id, firstName, secondName, time}});\n      },\n      openTimer: () => {\n        dispatch({type: 'OPEN_TIMER'});\n      },\n      setCurrentParticipant: (id, firstName, secondName) => {\n        dispatch({type: 'SET_CURRENT_PATICIPANT', payload: {id, firstName, secondName}});\n      },\n    };\n  };\n\n  const mapStateToProps = store => {\n    return {\n      isTimerActive: store.isTimerActive,\n      currentParticipant: store.currentParticipant\n    };\n  };\n\n  const Timer = ({props}) =>{\n\n    const [startIsActive, setStartisActive] = useState(false);\n    const [stopIsActive, setStopIsActive] = useState(false);\n    const [resetIsActive, setResetIsActive] = useState(false);\n    const [canselIsActive, setCanselIsActive] = useState(true);\n\n    const {setCurrentParticipant, openTimer, addParticipant, currentParticipant} = props;\n\n    const [time, setTime, setCounter, counter] = useTimer(startIsActive, \"00:00:00\", 0);\n\n  \n    const handleStart = ()=>{\n        setStartisActive(true);\n        setStopIsActive(true);\n        setResetIsActive(false);\n        setCanselIsActive(true);\n    };\n\n    const handleStop = ()=> {\n        setStartisActive(false);\n        setStopIsActive(false);\n        setResetIsActive(true);\n        setCanselIsActive(true);\n    };\n    \n    const handleReset = ()=>{\n        setStartisActive(false);\n        setStopIsActive(false);\n        setResetIsActive(false);\n        setCanselIsActive(true);\n        setCounter();\n        setTime();\n    };\n\n    const handleSave = () => {\n        if(counter){\n          addParticipant({...currentParticipant, time:counter});\n          setCurrentParticipant({});\n          openTimer();\n        }else{\n          alert('Время не может быть \"00:00:00\"');\n        }\n    };\n\n    const handleCancel = () => {\n        setCurrentParticipant({});\n        props.openTimer();\n    };\n    /* jshint ignore:start */\n    return  (\n         \n        <div className=\"timer-container\">\n            <div className=\"common-wraper\">\n                <h2>Participant</h2>  \n                <p><b>ID:</b> {currentParticipant.id}</p>\n                <p><b>Participant:</b> {currentParticipant.firstName + \" \" + currentParticipant.secondName}</p>\n                <div className=\"timer-wraper\">\n                    <h1>{time}</h1>\n                    <div className=\"btn_section\">\n                        <Button className=\"start\" name=\"Start\" onClick={handleStart} disabled={startIsActive || !stopIsActive && resetIsActive}/>  \n                        <Button className=\"stop\" name=\"Stop\" onClick={handleStop} disabled={!stopIsActive}/>  \n                        <Button className=\"reset\" name=\"Reset\" onClick={handleReset} disabled={!resetIsActive}/>  \n                    </div>\n                    <div className=\"final-btn-container\">\n                        <Button className=\"cancel-timer\" name=\"Cancel\" onClick={handleCancel} disabled={!canselIsActive}/>        \n                        <Button className=\"save-timer\" name=\"Save\" onClick={handleSave} disabled={!resetIsActive}/>        \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n    /* jshint ignore:end */\n  \n  };\n\nconst RegistrationForm = (props) => {\n  const {openTimer, isTimerActive, setCurrentParticipant} = props;\n\n  const handleSubmit = (e) => {\n      e.preventDefault();\n      const {firstName, secondName} = e.target.elements;\n      if(firstName.value && secondName.value){\n          if(firstName.value.match(/([A-z]|[а-я]|[А-Я])/) && secondName.value.match(/([A-z]|[а-я]|[А-Я])/)){\n              const id = uniqid();\n              setCurrentParticipant(id, firstName.value, secondName.value);\n              openTimer();\n              firstName.value='';\n              secondName.value='';\n              firstName.className=\"\";\n              firstName.placeholder = \"Enter first name...\";\n              secondName.className=\"\";\n              secondName.placeholder = \"Enter second name...\";\n          }else{\n              alert('В имени и фамилии должна быть хотя бы одна буква');\n          }\n\n      }else{\n          if(!firstName.value){\n              firstName.className=\"ampty-input\";\n              firstName.placeholder = \"Заполните поле\";\n          }\n          if(!secondName.value){\n              secondName.className=\"ampty-input\";\n              secondName.placeholder = \"Заполните поле\";\n          }\n      }\n  };\n\n  /* jshint ignore:start */\n  return(\n      <div className=\"registration-form\">\n          <h2>Registration user</h2>\n          <form action=\"submit\" onSubmit={handleSubmit}>\n              <div>\n                  <label htmlFor=\"first-name\">\n                      First name:\n                  </label>\n                  <Input name=\"firstName\" type=\"text\" placeholder=\"Enter first name...\"/>\n              </div>\n              <div>\n                  <label htmlFor=\"secondName\">\n                      Second name:\n                  </label>\n                  <Input name=\"secondName\" type=\"text\" placeholder=\"Enter second name...\"/>\n              </div>\n              <Button className={'regis-patric'} name=\"Register participant\"/>\n          </form>\n          {isTimerActive && <Timer props={props}/>}\n      </div>\n  )\n  /* jshint ignore:end */\n\n};\n\nconst RegistrationFormWithStore = connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\n\nexport default RegistrationFormWithStore;","import {connect} from 'react-redux';\nimport Button from './Button';\nimport {createTimeFormat} from '../useTimer';\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      showWinner: () => {\n        dispatch({type: 'SHOW_WINNER'});\n      }\n    };\n  };\n\n  const mapStateToProps = store => {\n    return {\n      listOfUsers: store.listOfUsers,\n      winner: store.winner,\n    };\n  };\n\nconst WinnerInfo = (props) => {\n\n    const {listOfUsers, winner, showWinner} = props;\n    /* jshint ignore:start */\n    return(\n        <div className=\"winner-info_container\">\n            <h3>Total participants: {listOfUsers ?  listOfUsers.length :'0' }</h3>\n            {   winner ?\n                <div className=\"winner-info\">\n                    <span><b>ID:</b> {winner.id}</span>\n                    <span><b>Name:</b> {winner.firstName}</span>\n                    <span><b>Surname:</b> {winner.secondName}</span>\n                    <span><b>Time:</b> {createTimeFormat(winner.time)}</span>\n                </div> :\n                <Button className='show-winner' name=\"Show winner\" onClick={showWinner}/>\n\n            }\n        </div>\n    )\n     /* jshint ignore:end */\n};\n\nconst WinnerInfoWithStore = connect(mapStateToProps, mapDispatchToProps)(WinnerInfo);\n\nexport default WinnerInfoWithStore;","import './css/App.css';\nimport UserCardWithStore from './components/UserCard';\nimport RegistrationFormWithStore from './components/RegistrationForm';\nimport WinnerInfoWithStore from './components/WinnerInfo';\nimport Input from './components/Input';\nimport {connect} from 'react-redux';\n\n\nconst mapStateToProps = store => {\n  return {\n    listOfUsers: store.listOfUsers,\n    arrayForRender: store.arrayForRender,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    filter: (value) => {\n      dispatch({type: 'FILTER', payload: value});\n    }\n  };\n};\n\n\nfunction App(props) {\n  const {arrayForRender} = props;\n  const handleFilter = (e) => {\n    props.filter(e.target.value);\n  };\n  /* jshint ignore:start */\n  return (\n      <div className=\"App\">\n        <div className=\"users-container\">\n          <Input \n          name='searchParticipants' \n          placeholder=\"Enter participant name...\" \n          onChange={handleFilter}\n          />\n          <div className=\"users-cards\">\n            {arrayForRender.map( user => {\n                return <UserCardWithStore user={user}/>\n            })}\n          </div>\n        </div>\n        <div className=\"aside-container\">\n          <RegistrationFormWithStore/>\n          <WinnerInfoWithStore/>\n        </div>\n      </div>\n\n  );\n  /* jshint ignore:end */\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const actionTypes = {\n    ADD_PARTICIPANT: 'ADD_PARTICIPANT',\n    SHOW_WINNER: 'SHOW_WINNER',\n    DELETE_PARTICIPANT: 'DELETE_PARTICIPANT',\n    FILTER: 'FILTER',\n    OPEN_TIMER: 'OPEN_TIMER',\n    SET_CURRENT_PATICIPANT: 'SET_CURRENT_PATICIPANT',\n};","import {actionTypes} from './actionTypes';\n\n\n\nconst initState = {\n    listOfUsers: JSON.parse(localStorage.getItem('listOfUsers')) || [],\n    winner: '',\n    arrayForRender: JSON.parse(localStorage.getItem('listOfUsers')) || [],\n    isFilter: false,\n    isTimerActive: false,\n    currentParticipant: {},\n};\n\nexport const reducer = (state=initState, action) => {\n    const {type, payload} = action;\n\n\n    switch (type) {\n        \n        case actionTypes.ADD_PARTICIPANT:\n            localStorage.listOfUsers = JSON.stringify([payload, ...state.arrayForRender]);\n            return {\n                ...state,\n                listOfUsers: [payload, ...state.listOfUsers],\n                arrayForRender: !state.isFilter ? [payload, ...state.arrayForRender] : [...state.arrayForRender],\n                winner: '',\n            };\n\n        case actionTypes.SHOW_WINNER:\n            const winner = [...state.listOfUsers].sort((a,b) => a.time-b.time);\n            return {\n                ...state,\n                winner: winner[0],\n            };\n\n        case actionTypes.DELETE_PARTICIPANT:\n            const index = state.listOfUsers.findIndex(participant => participant.id === payload.id);\n            const listOfUsers = [...state.listOfUsers];\n            listOfUsers.splice(index, 1);\n            const listOfUsersLS = JSON.parse(localStorage.getItem('listOfUsers'));\n            const indexLS = listOfUsersLS.findIndex(participant => participant.id === payload.id);\n            listOfUsersLS.splice(indexLS, 1);\n            localStorage.listOfUsers = JSON.stringify(listOfUsersLS);\n            return {\n                ...state,\n                listOfUsers: listOfUsers,\n                arrayForRender: listOfUsers,\n                winner: '',\n            };\n\n        case actionTypes.FILTER:\n            const arrayForRender = state.listOfUsers.filter( participant => {\n                const valid = \n                (participant.firstName.toLowerCase()).includes(payload.toLowerCase()) || \n                (participant.id.toLowerCase()).includes(payload.toLowerCase());\n                return valid;\n              });\n            return {\n                ...state,\n                arrayForRender: arrayForRender,\n                isFilter: !payload ? false : true,\n            };\n\n        case actionTypes.OPEN_TIMER:\n            return {\n                ...state,\n                isTimerActive: !state.isTimerActive,\n            };\n\n        case actionTypes.SET_CURRENT_PATICIPANT:\n            return {\n                ...state,\n                currentParticipant: payload,\n            };\n        default:\n            return state;   \n    }\n};","import {createStore} from 'redux';\nimport { reducer } from './reducer';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}