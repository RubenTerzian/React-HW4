{"version":3,"sources":["components/Button.jsx","components/Input.jsx","components/RegistrationForm.jsx","components/UserCard.jsx","components/WinnerInfo.jsx","App.jsx","reportWebVitals.js","store/actionTypes.js","store/reducer.js","store/index.js","index.js"],"names":["Button","className","onClick","name","disabled","Input","type","placeholder","onChange","id","createTimeFormat","counter","timeConfig","hours","minutes","seconds","Math","floor","Timer","props","useState","time","setTime","setCounter","startIsActive","setStartisActive","stopIsActive","setStopIsActive","resetIsActive","setResetIsActive","canselIsActive","setCanselIsActive","setCurrentParticipant","openTimer","addParticipant","currentParticipant","useEffect","intervalId","setInterval","timeFormat","clearInterval","firstName","secondName","alert","RegistrationFormWithStore","connect","store","isTimerActive","dispatch","payload","action","onSubmit","e","preventDefault","target","elements","value","match","uniqid","htmlFor","UserCardWithStore","delete","user","key","WinnerInfoWithStore","listOfUsers","winner","showWinner","length","arrayForRender","filter","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","actionTypes","initState","JSON","parse","localStorage","getItem","isFilter","createStore","state","stringify","console","log","sort","a","b","index","findIndex","participant","splice","listOfUsersLS","indexLS","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c766a253.chunk.js","sourcesContent":["\n\nconst Button = ({className, onClick, name, disabled}) => {\n    /* jshint ignore:start */\n    return(\n    <button className={className+'-btn'} onClick={onClick} key={name+\"_btn_key\"} disabled={disabled}>{name}</button>\n    )\n     /* jshint ignore:end */    \n\n};\n\nexport default Button;","const Input = ({name, type, placeholder, onChange}) => {\n    /* jshint ignore:start */\n    return  <input type={type} id={name} name={name} placeholder={placeholder} onChange={onChange} key={name + '_inp_key'}/>\n    /* jshint ignore:end */\n};\n\nexport default Input;\n\n","import Button from \"./Button\";\nimport Input from \"./Input\";\nimport uniqid from \"uniqid\";\nimport { connect } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\n\nexport const createTimeFormat = (counter) => {\n    const timeConfig ={\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n      };\n\n      if(counter/60 < 1){\n        // seconds\n        timeConfig.seconds = counter;\n      }else{\n        if(counter/(60*60) < 1){\n          timeConfig.minutes = Math.floor(counter/60);\n          timeConfig.seconds = counter%(60);\n        }else{\n          timeConfig.hours = Math.floor(counter/(60*60));\n          timeConfig.minutes = Math.floor(counter/60%60);\n          timeConfig.seconds = counter%60;\n        }\n      }\n\n      const timeFormat = \n           (timeConfig.hours<10 ? '0' + timeConfig.hours : timeConfig.hours) + ':' + \n           (timeConfig.minutes<10 ? '0' + timeConfig.minutes : timeConfig.minutes) + ':' + \n           (timeConfig.seconds<10 ? '0' + timeConfig.seconds : timeConfig.seconds);\n           return timeFormat;\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      addParticipant: ({id, firstName, secondName, time}) => {\n        dispatch({type: 'ADD_PARTICIPANT', payload: {id, firstName, secondName, time}});\n      },\n      openTimer: () => {\n        dispatch({type: 'OPEN_TIMER'});\n      },\n      setCurrentParticipant: (id, firstName, secondName) => {\n        dispatch({type: 'SET_CURRENT_PATICIPANT', payload: {id, firstName, secondName}});\n      },\n    };\n  };\n\n  const mapStateToProps = store => {\n    return {\n      isTimerActive: store.isTimerActive,\n      currentParticipant: store.currentParticipant\n    };\n  };\n\n  const Timer = ({props}) =>{\n\n    const [time, setTime] = useState(\"00:00:00\");\n    const [counter, setCounter] = useState(0);\n    const [startIsActive, setStartisActive] = useState(true);\n    const [stopIsActive, setStopIsActive] = useState(false);\n    const [resetIsActive, setResetIsActive] = useState(false);\n    const [canselIsActive, setCanselIsActive] = useState(true);\n\n    const {setCurrentParticipant, openTimer, addParticipant, currentParticipant} = props;\n\n    useEffect(()=>{\n      let intervalId;\n      if(!startIsActive){\n  \n        intervalId = setInterval(()=>{\n          const timeFormat = createTimeFormat(counter);\n          setTime(timeFormat);\n          setCounter(counter+1);\n        },20);\n      }\n      return () =>{\n          clearInterval(intervalId);\n      };\n    }, [startIsActive, setTime, counter]);\n  \n    const handleStart = ()=>{\n        setStartisActive(false);\n        setStopIsActive(true);\n        setResetIsActive(false);\n        setCanselIsActive(true);\n    };\n\n    const handleStop = ()=> {\n        setStartisActive(true);\n        setStopIsActive(false);\n        setResetIsActive(true);\n        setCanselIsActive(true);\n    };\n    \n    const handleReset = ()=>{\n        setStartisActive(true);\n        setStopIsActive(false);\n        setResetIsActive(false);\n        setCanselIsActive(true);\n        setCounter(0);\n        setTime(\"00:00:00\");\n    };\n\n    const handleSave = () => {\n        if(counter){\n          addParticipant({...currentParticipant, time:counter});\n          setCurrentParticipant({});\n          openTimer();\n        }else{\n          alert('Время не может быть \"00:00:00\"');\n        }\n    };\n\n    const handleCancel = () => {\n        setCurrentParticipant({});\n        props.openTimer();\n    };\n    /* jshint ignore:start */\n    return  (\n         \n        <div className=\"timer-container\">\n            <div className=\"common-wraper\">\n                <h2>Participant</h2>  \n                <p><b>ID:</b> {currentParticipant.id}</p>\n                <p><b>Participant:</b> {currentParticipant.firstName + \" \" + currentParticipant.secondName}</p>\n                <div className=\"timer-wraper\">\n                    <h1>{time}</h1>\n                    <div className=\"btn_section\">\n                        <Button className=\"start\" name=\"Start\" onClick={handleStart} disabled={!startIsActive || !stopIsActive && resetIsActive}/>  \n                        <Button className=\"stop\" name=\"Stop\" onClick={handleStop} disabled={!stopIsActive}/>  \n                        <Button className=\"reset\" name=\"Reset\" onClick={handleReset} disabled={!resetIsActive}/>  \n                    </div>\n                    <div className=\"final-btn-container\">\n                        <Button className=\"cancel-timer\" name=\"Cancel\" onClick={handleCancel} disabled={!canselIsActive}/>        \n                        <Button className=\"save-timer\" name=\"Save\" onClick={handleSave} disabled={!resetIsActive}/>        \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n    /* jshint ignore:end */\n  \n  };\n\nconst RegistrationForm = (props) => {\n  const {openTimer, isTimerActive, setCurrentParticipant} = props;\n\n  const handleSubmit = (e) => {\n      e.preventDefault();\n      const {firstName, secondName} = e.target.elements;\n      if(firstName.value && secondName.value){\n          if(firstName.value.match(/([A-z]|[а-я]|[А-Я])/) && secondName.value.match(/([A-z]|[а-я]|[А-Я])/)){\n              const id = uniqid();\n              setCurrentParticipant(id, firstName.value, secondName.value);\n              openTimer();\n              firstName.value='';\n              secondName.value='';\n              firstName.className=\"\";\n              firstName.placeholder = \"Enter first name...\";\n              secondName.className=\"\";\n              secondName.placeholder = \"Enter second name...\";\n          }else{\n              alert('В имени и фамилии должна быть хотя бы одна буква');\n          }\n\n      }else{\n          if(!firstName.value){\n              firstName.className=\"ampty-input\";\n              firstName.placeholder = \"Заполните поле\";\n          }\n          if(!secondName.value){\n              secondName.className=\"ampty-input\";\n              secondName.placeholder = \"Заполните поле\";\n          }\n      }\n  };\n\n  /* jshint ignore:start */\n  return(\n      <div className=\"registration-form\">\n          <h2>Registration user</h2>\n          <form action=\"submit\" onSubmit={handleSubmit}>\n              <div>\n                  <label htmlFor=\"first-name\">\n                      First name:\n                  </label>\n                  <Input name=\"firstName\" type=\"text\" placeholder=\"Enter first name...\"/>\n              </div>\n              <div>\n                  <label htmlFor=\"secondName\">\n                      Second name:\n                  </label>\n                  <Input name=\"secondName\" type=\"text\" placeholder=\"Enter second name...\"/>\n              </div>\n              <Button className={'regis-patric'} name=\"Register participant\"/>\n          </form>\n          {isTimerActive && <Timer props={props}/>}\n      </div>\n  )\n  /* jshint ignore:end */\n\n};\n\nconst RegistrationFormWithStore = connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\n\nexport default RegistrationFormWithStore;","import { connect } from \"react-redux\";\nimport Button from \"./Button\";\nimport {createTimeFormat} from './RegistrationForm';\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      delete: (user) => {\n        dispatch({type: 'DELETE_PARTICIPANT', payload: user});\n      }\n    };\n  };\n\nconst UserCard = (props) => {\n    const {id, firstName, secondName, time} = props.user;\n    const key = 'user_card_key';\n    /* jshint ignore:start */\n    return(\n        <div className=\"user-card\" key={key +'_div'}>\n            <span key={key +'_id'}><b>ID:</b> {id}</span>\n            <span key={key +'_name'}><b>Name:</b> {firstName}</span>\n            <span key={key +'_secName'}><b>Surname:</b> {secondName}</span>\n            <span key={key +'_time'}><b>Time:</b> {createTimeFormat(time)}</span>\n            <Button className=\"delete-user\" name=\"Delete\" onClick={e => props.delete(props.user)}/>\n        </div>\n    )\n     /* jshint ignore:end */\n};\n\nconst UserCardWithStore = connect(null, mapDispatchToProps)(UserCard);\n\nexport default UserCardWithStore;","import {connect} from 'react-redux';\nimport Button from './Button';\nimport { createTimeFormat } from './RegistrationForm';\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      showWinner: () => {\n        dispatch({type: 'SHOW_WINNER'});\n      }\n    };\n  };\n\n  const mapStateToProps = store => {\n    return {\n      listOfUsers: store.listOfUsers,\n      winner: store.winner,\n    };\n  };\n\nconst WinnerInfo = (props) => {\n\n    const {listOfUsers, winner, showWinner} = props;\n    /* jshint ignore:start */\n    return(\n        <div className=\"winner-info_container\">\n            <h3>Total participants: {listOfUsers ?  listOfUsers.length :'0' }</h3>\n            {   winner ?\n                <div className=\"winner-info\">\n                    <span><b>ID:</b> {winner.id}</span>\n                    <span><b>Name:</b> {winner.firstName}</span>\n                    <span><b>Surname:</b> {winner.secondName}</span>\n                    <span><b>Time:</b> {createTimeFormat(winner.time)}</span>\n                </div> :\n                <Button className='show-winner' name=\"Show winner\" onClick={showWinner}/>\n\n            }\n        </div>\n    )\n     /* jshint ignore:end */\n};\n\nconst WinnerInfoWithStore = connect(mapStateToProps, mapDispatchToProps)(WinnerInfo);\n\nexport default WinnerInfoWithStore;","import './css/App.css';\nimport UserCardWithStore from './components/UserCard';\nimport RegistrationFormWithStore from './components/RegistrationForm';\nimport WinnerInfoWithStore from './components/WinnerInfo';\nimport Input from './components/Input';\nimport {connect} from 'react-redux';\n\n\nconst mapStateToProps = store => {\n  return {\n    listOfUsers: store.listOfUsers,\n    arrayForRender: store.arrayForRender,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    filter: (value) => {\n      dispatch({type: 'FILTER', payload: value});\n    }\n  };\n};\n\n\nfunction App(props) {\n  const {arrayForRender} = props;\n  const handleFilter = (e) => {\n    props.filter(e.target.value);\n  };\n  /* jshint ignore:start */\n  return (\n      <div className=\"App\">\n        <div className=\"users-container\">\n          <Input \n          name='searchParticipants' \n          placeholder=\"Enter participant name...\" \n          onChange={handleFilter}\n          />\n          <div className=\"users-cards\">\n            {arrayForRender.map( user => {\n                return <UserCardWithStore user={user}/>\n            })}\n          </div>\n        </div>\n        <div className=\"aside-container\">\n          <RegistrationFormWithStore/>\n          <WinnerInfoWithStore/>\n        </div>\n      </div>\n\n  );\n  /* jshint ignore:end */\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const actionTypes = {\n    ADD_PARTICIPANT: 'ADD_PARTICIPANT',\n    SHOW_WINNER: 'SHOW_WINNER',\n    DELETE_PARTICIPANT: 'DELETE_PARTICIPANT',\n    FILTER: 'FILTER',\n    OPEN_TIMER: 'OPEN_TIMER',\n    SET_CURRENT_PATICIPANT: 'SET_CURRENT_PATICIPANT',\n};","import {actionTypes} from './actionTypes';\n\n\n\nconst initState = {\n    listOfUsers: JSON.parse(localStorage.getItem('listOfUsers')) || [],\n    winner: '',\n    arrayForRender: JSON.parse(localStorage.getItem('listOfUsers')) || [],\n    isFilter: false,\n    isTimerActive: false,\n    currentParticipant: {},\n};\n\nexport const reducer = (state=initState, action) => {\n    const {type, payload} = action;\n\n\n    switch (type) {\n        \n        case actionTypes.ADD_PARTICIPANT:\n            localStorage.listOfUsers = JSON.stringify([payload, ...state.arrayForRender]);\n            console.log(state.arrayForRender);\n            return {\n                ...state,\n                listOfUsers: [payload, ...state.listOfUsers],\n                arrayForRender: !state.isFilter ? [payload, ...state.arrayForRender] : [...state.arrayForRender],\n                winner: '',\n            };\n\n        case actionTypes.SHOW_WINNER:\n            const winner = [...state.listOfUsers].sort((a,b) => a.time-b.time);\n            console.log(winner[0]);\n            return {\n                ...state,\n                winner: winner[0],\n            };\n\n        case actionTypes.DELETE_PARTICIPANT:\n            const index = state.listOfUsers.findIndex(participant => participant.id === payload.id);\n            const listOfUsers = [...state.listOfUsers];\n            listOfUsers.splice(index, 1);\n            const listOfUsersLS = JSON.parse(localStorage.getItem('listOfUsers'));\n            const indexLS = listOfUsersLS.findIndex(participant => participant.id === payload.id);\n            listOfUsersLS.splice(indexLS, 1);\n            localStorage.listOfUsers = JSON.stringify(listOfUsersLS);\n            return {\n                ...state,\n                listOfUsers: listOfUsers,\n                arrayForRender: listOfUsers,\n                winner: '',\n            };\n\n        case actionTypes.FILTER:\n            const arrayForRender = state.listOfUsers.filter( participant => {\n                const valid = \n                (participant.firstName.toLowerCase()).includes(payload.toLowerCase()) || \n                (participant.id.toLowerCase()).includes(payload.toLowerCase());\n                return valid;\n              });\n            return {\n                ...state,\n                arrayForRender: arrayForRender,\n                isFilter: !payload ? false : true,\n            };\n\n        case actionTypes.OPEN_TIMER:\n            return {\n                ...state,\n                isTimerActive: !state.isTimerActive,\n            };\n\n        case actionTypes.SET_CURRENT_PATICIPANT:\n            return {\n                ...state,\n                currentParticipant: payload,\n            };\n        default:\n            return state;   \n    }\n};","import {createStore} from 'redux';\nimport { reducer } from './reducer';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}